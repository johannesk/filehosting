#!/usr/bin/ruby
#
# Author:: Johannes Krude
# Copyright:: (c) Johannes Krude 2009
# License:: AGPL3
#
#--
# This file is part of filehosting.
#
# filehosting is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# filehosting is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with filehosting.  If not, see <http://www.gnu.org/licenses/>.
#++
#

require "filehosting/config"
require "filehosting/configfilereader"
require "filehosting/configargreader"
require "filehosting/error"

class ReplaceArgReader < FileHosting::ConfigArgReader
	
	def banner
		super + " <uuid>"
	end

	def help_filename
		"update filename"
	end

	$filename= nil
	def switch_filename(filename)
		$filename= filename
	end
	alias :switch_n :switch_filename

	def help_source
		"update source"
	end

	$source= nil
	def switch_source(source)
		$source= source
	end
	alias :switch_c :switch_source

	def help_tags
		"update tags"
	end

	$tags= nil
	def switch_tags(tags)
		$tags= tags.split(" ")
	end
	alias :switch_t :switch_tags

end

etcreader= FileHosting::ConfigFileReader.new("/etc/filehostingrc")
homereader= FileHosting::ConfigFileReader.new("#{ENV["HOME"]}/.filehostingrc")
argreader= ReplaceArgReader.new
args= argreader.parse(ARGV)

config= FileHosting::Config.new(etcreader, homereader, argreader)

if args.size != 1
	STDERR.puts argreader.usage
	exit 1
end
uuid= args[0]

begin
	fileinfo= config.datasource.fileinfo(uuid)

	if $filename
		fileinfo.filename= $filename
	end

	if $source
		fileinfo.source= $source
	end

	if $tags
		fileinfo.tags= $tags
	end

	config.datasource.update_fileinfo(fileinfo)
rescue FileHosting::Error => e
	puts e
end

