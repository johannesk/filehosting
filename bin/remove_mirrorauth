#!/usr/bin/ruby
#
# Author:: Johannes Krude
# Copyright:: (c) Johannes Krude 2009
# License:: AGPL3
#
#--
# This file is part of filehosting.
#
# filehosting is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# filehosting is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with filehosting.  If not, see <http://www.gnu.org/licenses/>.
#++
#

require "filehosting/binenv"
require "filehosting/mirror"
require "filehosting/mirrorauth"

class RemoveMirrorAuthArgReader < FileHosting::ConfigArgReader

	def banner
		super + " <auth-type> <identifier> <location .. location>"
	end

	define_method(:"help_auth-types") do
		"list available auth-types"
	end

	define_method(:"switch_auth-types") do
		puts "available auth-types:"
		puts
		puts "\thttp_basic_auth"
		exit
	end
	alias :switch_t :"switch_auth-types"

	def arg_count
		(3..1.0/0)
	end

end

FileHosting::BinEnv.new(RemoveMirrorAuthArgReader.new) do |env|
	type= env.args.shift
	identifier= env.args.shift
	locations= env.args
	auth= case type
	when "http_basic_auth"
		FileHosting::Mirror::Auth.http_basic_auth(identifier, nil, locations)
	else
		puts "invalid auth-type"
		exit 2
	end

	mirror= FileHosting::Mirror.new(env.config)
	mirror.remove_auth(auth)
end
