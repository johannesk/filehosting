#!/usr/bin/ruby
#
# Author:: Johannes Krude
# Copyright:: (c) Johannes Krude 2009
# License:: AGPL3
#
#--
# This file is part of filehosting.
#
# filehosting is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# filehosting is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with filehosting.  If not, see <http://www.gnu.org/licenses/>.
#++
#

require "filehosting/config"
require "filehosting/configfilereader"
require "filehosting/configargreader"
require "filehosting/error"

class SearchArgReader < FileHosting::ConfigArgReader
	
	def banner
		super + " <tag ... tag>"
	end

	def help_partialmatch
		"also find files with only partial matches"
	end

	$partial_match= false
	def switch_partialmatch
		$partial_match= true
	end
	alias :switch_p :switch_partialmatch

	def help_uuid
		"display only uuid's"
	end

	$uuid= false
	def switch_uuid
		$uuid= true
	end
	alias :switch_u :switch_uuid

end

etcreader= FileHosting::ConfigFileReader.new("/etc/filehostingrc")
homereader= FileHosting::ConfigFileReader.new("#{ENV["HOME"]}/.filehostingrc")
argreader= SearchArgReader.new
args= argreader.parse(ARGV)

config= FileHosting::Config.new(etcreader, homereader, argreader)

if args.size < 1
	STDERR.puts argreader.usage
	exit 1
end

begin
	fileinfos= config.datasource.search_tags(args)
	fileinfos_partial= config.datasource.search_tags_partial(args) if $partial_match
rescue FileHosting::Error => e
	puts e
	exit 2
end

puts "#{fileinfos.size} Files found" if $human
puts "#{fileinfos_partial.size} Files with partial match found" if $human and $partial_match
puts if $human and fileinfos.size > 0
fileinfos+= fileinfos_partial if $partial_match
puts((fileinfos).collect do |f|
	unless $uuid
		f.to_text + "\n"
	else
		f.uuid.to_s
	end
end.join("\n")) if fileinfos.size > 0
